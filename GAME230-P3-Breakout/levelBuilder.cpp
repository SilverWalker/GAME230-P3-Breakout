#include <iostream>
#include <cmath>
#include <vector>
#include "Setting.h"
#include "Brick.h"
#include "LevelBuilder.h"

LevelBuilder::LevelBuilder()
{
	this->gridX = 10;
	this->gridY = 10;
	this->maxLevel = 10;
	this->levels = {
		{	//level 1 
			{0,0,1}, {1,1,1}, {2,2,1}, {3,3,1}, {4,4,1}, {5,5,1}, {6,6,1}, {7,0,1}, {8,1,1}, {9,2,1},
			{20,0,1}, {21,1,1}, {22,2,1}, {23,3,1}, {24,4,1}, {25,5,1}, {26,6,1}, {27,0,1}, {28,1,1}, {29,2,1},
			{40,0,1}, {41,1,1}, {42,2,1}, {43,3,1}, {44,4,1}, {45,5,1}, {46,6,1}, {47,0,1}, {48,1,1}, {49,2,1},
			{60,0,1}, {61,1,1}, {62,2,1}, {63,3,1}, {64,4,1}, {65,5,1}, {66,6,1}, {67,0,1}, {68,1,1}, {69,2,1},
			{80,8,2}, {81,8,2}, {82,8,2}, {83,8,2}, {84,8,2}, {85,8,2}, {86,8,2}, {87,8,2}, {88,8,2}, {89,8,2}
		},
		{	//level 2
			{40,0,1}, {41,0,1}, {42,0,1}, {43,0,1}, {44,0,1},
			{50,1,1}, {51,1,1}, {52,1,1}, {53,1,1}, {54,1,1}, {55,1,1},
			{60,2,1}, {61,2,1}, {62,2,1}, {63,2,1}, {64,2,1}, {65,2,1}, {66,2,1},
			{70,3,1}, {71,3,1}, {72,3,1}, {73,3,1}, {74,3,1}, {75,3,1}, {76,3,1}, {77,3,1},
			{80,4,1}, {81,4,1}, {82,4,1}, {83,4,1}, {84,4,1}, {85,4,1}, {86,4,1}, {87,4,1}, {88,4,1},
			{90,8,2}, {91,8,2}, {92,8,2}, {93,8,2}, {94,8,2}, {95,8,2}, {96,8,2}, {97,8,2}, {98,8,2}
		},
		{	//level 3
			{0,9,-1}, {1,9,-1}, {2,0,1}, {3,0,1}, {4,9,-1}, {5,9,-1}, {6,0,1}, {7,0,1}, {8,9,-1}, {9,9,-1},
			{30,2,1}, {31,2,1}, {32,7,-1}, {33,7,-1}, {34,2,1}, {35,2,1}, {36,7,-1}, {37,7,-1}, {38,2,1}, {39,2,1},
			{60,9,-1}, {61,9,-1}, {62,4,1}, {63,4,1}, {64,9,-1}, {65,9,-1}, {66,4,1}, {67,4,1}, {68,9,-1}, {69,9,-1},
			{90,6,1}, {91,6,1}, {92,7,-1}, {93,7,-1}, {94,6,1}, {95,6,1}, {96,7,-1}, {97,7,-1}, {98,6,1}, {99,6,1}
		},
		{	//level 4
			{0,9,-1}, {1,9,-1}, {2,9,-1}, {3,9,-1}, {4,9,-1}, {5,9,-1}, {6,9,-1}, {7,9,-1}, {8,9,-1}, {9,9,-1},
			{10,9,-1}, {11,0,1},  {12,9,-1}, {13,1,1}, {14,9,-1}, {15,2,1}, {16,9,-1}, {17,3,1}, {18,9,-1}, {19,4,1},
			{20,9,-1}, {22,9,-1}, {24,9,-1}, {26,9,-1}, {28,9,-1},
			{30,9,-1}, {32,9,-1}, {34,9,-1}, {36,9,-1}, {38,9,-1},
			{40,9,-1}, {42,9,-1}, {44,9,-1}, {46,9,-1}, {48,9,-1},
			{50,9,-1}, {51,7,2}, {52,9,-1}, {54,9,-1}, {56,9,-1}, {58,9,-1},
			{62,9,-1}, {63,7,2}, {64,9,-1}, {66,9,-1}, {68,9,-1},
			{74,9,-1}, {75,7,2}, {76,9,-1}, {78,9,-1},
			{86,9,-1}, {87,7,2}, {88,9,-1},
			{98,9,-1}, {99,7,2}
		},
		{	//level 5
			{2,6,1}, {3,6,1}, {4,6,1}, {5,6,1}, {6,6,1}, {7,6,1},
			{10,0,1}, {13,5,1}, {14,5,1}, {15,5,1}, {16,5,1}, {19,0,1},
			{20,0,1}, {21,1,1}, {24,4,1}, {25,4,1}, {28,1,1}, {29,0,1},
			{30,0,1}, {31,1,1}, {32,2,1}, {37,2,1}, {38,1,1}, {39,0,1},
			{40,0,1}, {41,1,1}, {42,2,1}, {43,3,1}, {46,3,1}, {47,2,1}, {48,1,1}, {49,0,1},
			{50,0,1}, {51,1,1}, {52,2,1}, {53,3,1}, {56,3,1}, {57,2,1}, {58,1,1}, {59,0,1},
			{60,0,1}, {61,1,1}, {62,2,1}, {67,2,1}, {68,1,1}, {69,0,1},
			{70,0,1}, {71,1,1}, {74,4,1}, {75,4,1}, {78,1,1}, {79,0,1},
			{80,0,1}, {83,5,1}, {84,5,1}, {85,5,1}, {86,5,1}, {89,0,1},
			{92,6,1}, {93,6,1}, {94,6,1}, {95,6,1}, {96,6,1}, {97,6,1},
		},
		{	//level 6
			{0,2,1}, {1,1,1}, {2,0,1}, {3,6,1}, {4,5,1}, {5,5,1}, {6,6,1}, {7,0,1}, {8,1,1}, {9,2,1},
			{10,1,1}, {11,0,1}, {12,6,1}, {13,5,1}, {14,4,1}, {15,4,1}, {16,5,1}, {17,6,1}, {18,0,1}, {19,1,1},
			{20,0,1}, {21,6,1}, {22,5,1}, {23,4,1}, {24,3,1}, {25,3,1}, {26,4,1}, {27,5,1}, {28,6,1}, {29,0,1},
			{30,6,1}, {31,5,1}, {32,4,1}, {33,3,1}, {34,2,1}, {35,2,1}, {36,3,1}, {37,4,1}, {38,5,1}, {39,6,1},
			{40,8,2}, {41,9,-1}, {42,9,-1}, {43,9,-1}, {44,8,2}, {45,8,2}, {46,9,-1}, {47,9,-1}, {48,9,-1}, {49,8,2}
		},
		{	//level 7
			{14,7,1}, {15,7,1},
			{23,9,1}, {24,7,1},	{25,7,1}, {26,7,1},
			{32,9,1}, {33,7,1}, {34,7,1}, {35,9,2}, {36,7,1}, {37,7,1},
			{42,9,1}, {43,9,1}, {44,7,1}, {45,7,1}, {46,7,1}, {47,7,1},
			{52,9,1}, {53,9,1}, {54,9,1}, {55,9,1}, {56,7,1}, {57,7,1},
			{62,9,1}, {63,9,1}, {64,7,2}, {65,9,1}, {66,9,1}, {67,7,1},
			{73,9,1}, {74,9,1},	{75,9,1}, {76,7,1},
			{84,9,1}, {85,9,1},
		},
		{	//level 8
			{11,4,1}, {12,1,1}, {13,4,1}, {14,1,1}, {15,4,1}, {16,1,1}, {17,4,1}, {18,1,1},
			{21,7,-1}, {22,7,-1}, {23,7,-1}, {24,7,-1}, {25,7,-1}, {26,7,-1}, {27,7,-1}, {28,7,-1},
			{41,6,1}, {42,2,1}, {43,6,1}, {44,2,1}, {45,6,1}, {46,2,1}, {47,6,1}, {48,2,1},
			{51,8,-1}, {52,8,-1}, {53,8,-1}, {54,8,-1}, {55,8,-1}, {56,8,-1}, {57,8,-1}, {58,8,-1},
			{71,3,1}, {72,0,1}, {73,3,1}, {74,0,1}, {75,3,1}, {76,0,1}, {77,3,1}, {78,0,1},
			{81,9,-1}, {82,9,-1}, {83,9,-1}, {84,9,-1}, {85,9,-1}, {86,9,-1}, {87,9,-1}, {88,9,-1},
		},
		{	//level 9
			{0,9,-1}, {1,9,-1}, {4,4,2}, {5,4,2}, {8,9,-1}, {9,9,-1},
			{10,9,-1}, {13,3,2}, {16,3,2}, {19,9,-1},
			{22,2,2}, {27,2,2},
			{31,1,2}, {34,5,2}, {35,5,2}, {38,1,2},
			{40,0,2}, {43,6,2}, {44,7,-1}, {45,7,-1}, {46,6,2}, {49,0,2},
			{50,0,2}, {53,6,2}, {54,7,-1}, {55,7,-1}, {56,6,2}, {59,0,2},
			{61,1,2}, {64,5,2}, {65,5,2}, {68,1,2},
			{72,2,2}, {77,2,2},
			{80,9,-1}, {83,3,2}, {86,3,2}, {89,9,-1},
			{90,9,-1}, {91,9,-1}, {94,4,2}, {95,4,2}, {98,9,-1}, {99,9,-1},
		},
		{	//level 10
			{20,9,-1}, {21,0,1}, {22,0,1}, {23,9,-1}, {26,9,-1}, {27,0,1}, {28,0,1}, {29,9,-1},
			{30,9,-1}, {31,1,1}, {32,1,1}, {33,9,-1}, {34,7,1}, {35,7,1}, {36,9,-1}, {37,1,1}, {38,1,1}, {39,9,-1},
			{40,9,-1}, {41,2,1}, {42,2,1}, {43,9,-1}, {44,8,1}, {45,8,1}, {46,9,-1}, {47,2,1}, {48,2,1}, {49,9,-1},
			{50,9,-1}, {51,3,1}, {52,3,1}, {53,9,-1}, {54,7,1}, {55,7,1}, {56,9,-1}, {57,3,1}, {58,3,1}, {59,9,-1},
			{60,9,-1}, {61,4,1}, {62,4,1}, {63,9,-1}, {64,8,1}, {65,8,1}, {66,9,-1}, {67,4,1}, {68,4,1}, {69,9,-1},
			{70,9,-1}, {71,5,1}, {72,5,1}, {73,9,-1}, {74,7,1}, {75,7,1}, {76,9,-1}, {77,5,1}, {78,5,1}, {79,9,-1},
			{80,9,-1}, {81,6,1}, {82,6,1}, {83,9,-1}, {84,8,1}, {85,8,1}, {86,9,-1}, {87,6,1}, {88,6,1}, {89,9,-1},
			{90,9,-1}, {91,9,-1}, {92,9,-1}, {93,9,-1}, {96,9,-1}, {97,9,-1}, {98,9,-1}, {99,9,-1},
		}
	};
}

void LevelBuilder::buildLevel(int level)
{
	int stage = (level - 1) % this->maxLevel;
	player->reset();
	ball->reset();
	bricks.clear();
	fixedBricks.clear();
	powerups.clear();
	/*for (int i = 0; i < 100; i++) {
		if ((i / 10) % 2 == 0) {
			bricks.push_back(new Brick((i % 10) * 100 + 50, int(i / 10) * 40 + 20 + 50, i % 10, 2));
		}
	}*/
	for (int i = 0; i < this->levels.at(stage).size(); i++) {
		if (this->levels[stage][i][2] > 0) {
			bricks.push_back(new Brick((this->levels[stage][i][0] % 10) * 100 + 50, int(this->levels[stage][i][0] / 10) * 40 + 20 + 50, this->levels[stage][i][1], this->levels[stage][i][2]));
		}
		else {
			fixedBricks.push_back(new Brick((this->levels[stage][i][0] % 10) * 100 + 50, int(this->levels[stage][i][0] / 10) * 40 + 20 + 50, this->levels[stage][i][1], this->levels[stage][i][2]));
		}
	}
}